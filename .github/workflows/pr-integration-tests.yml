name: Integration Testing Realm JS (Pull Request)

on:
  pull_request:
    paths:
      # Source code
      - '*'
      - 'lib/**'
      - 'src/**'
      - 'types/**'
      - 'react-native/**'
      - 'vendor/**'
      # Integration tests
      - 'integration-tests/**'
      # No need to run when updating documentation
      - '!**.md'

jobs:
  node:
    if: ${{ false }}
    name: Node.js on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      # Install the root package (--ignore-scripts to avoid downloading or building the native module)
      - run: npm ci --ignore-scripts
      # Bootstrap lerna sub-packages (builds the packages and Realm JS native module)
      - run: npx lerna bootstrap --scope realm-node-tests --include-dependencies
      # Run tests
      - run: npm test --prefix integration-tests/environments/node
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
  electron:
    name: Electron on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      # Install the root package (--ignore-scripts to avoid downloading or building the native module)
      - run: npm ci --ignore-scripts
      # Bootstrap lerna sub-packages (builds the packages and Realm JS native module)
      - run: npx lerna bootstrap --scope realm-electron-tests --include-dependencies
      # Run tests (using xvfb-run to enable opening windows in a virtual framebuffer)
      - name: Run tests (Electron / Main)
        run: xvfb-run npm run test:main --prefix integration-tests/environments/electron
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
      - name: Run tests (Electron / Renderer)
        run: xvfb-run npm run test:renderer --prefix integration-tests/environments/electron
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
  react-native-ios:
    if: ${{ false }}
    name: React Native on iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      # Setup tools
      - name: Install tools
        run: brew install watchman
      # TODO: Expose a way to skip building the Node.js native module
      - name: Patch package.json to avoid building Node.js native module
        run: cat <<< $(jq '.scripts.install = "echo skipping building Node.js binary"' < package.json) > package.json

      # Caches
      - uses: actions/cache@v2
        name: Restore node_modules
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        name: Restore iOS build folder from cache
        with:
          path: react-native/ios/build
          key: ios-build-dir-${{ hashFiles('src/**', 'react-native/ios/**', 'vendor/**') }}
          restore-keys: |
            ios-build-dir-
      - uses: actions/cache@v2
        name: Restore xcframework from cache
        id: cache-xcframework
        with:
          path: react-native/ios/realm-js-ios.xcframework
          key: xcframework-${{ hashFiles('src/**', 'react-native/ios/**', 'vendor/**') }}
      - uses: actions/cache@v2
        name: Restore Xcode "derived data" from cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: xcode-derived-data
      - uses: actions/cache@v2
        name: Restore CocoaPods from cache
        with:
          path: integration-tests/environments/react-native/ios/Pods
          key: cocoapods-${{ hashFiles('integration-tests/environments/react-native/ios/Podfile.lock') }}
          restore-keys: | # Enables running from an old build
            cocoapods-

      - run: npm ci
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
      # Build the iOS xcframework (if cache missed)
      - run: ./scripts/build-ios.sh -c Debug -s
        if: ${{ steps.cache-xcframework.outputs.cache-hit != 'true' }}
      # Bootstrap lerna sub-packages (builds the packages, the Realm JS native module and pod install)
      - run: npx lerna bootstrap --scope '{realm-integration-tests,realm-react-native-tests}' --include-dependencies
      # Run the tests
      - name: Run tests (iOS / Native)
        run: npm run test:ios --prefix integration-tests/environments/react-native
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
          MOCHA_REMOTE_EXIT_ON_ERROR: true
      - name: Run tests (iOS / Chrome Debugging)
        run: npm run test:ios:chrome --prefix integration-tests/environments/react-native
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
          MOCHA_REMOTE_EXIT_ON_ERROR: true
          HEADLESS_DEBUGGER: true
  react-native-android:
    name: React Native on Android
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      # Setup tools
      - name: Install tools
        run: brew install watchman
      # TODO: Expose a way to skip building the Node.js native module
      - name: Patch package.json to avoid building Node.js native module
        run: cat <<< $(jq '.scripts.install = "echo skipping building Node.js binary"' < package.json) > package.json
      # Install the root package
      - uses: actions/cache@v2
        name: Restore node_modules
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      # Caches
      - uses: actions/cache@v2
        name: Restore Android build folders from cache
        with:
          path: |
            build-realm-android
            react-native/android/build
          key: android-build-dir-${{ hashFiles('src/**', 'react-native/android/**', 'vendor/**') }}
          restore-keys: |
            android-build-dir-
      - uses: actions/cache@v2
        name: Restore Android librealm.so from cache
        id: cache-android-so
        with:
          path: react-native/android/**/librealm.so
          key: android-so-${{ hashFiles('src/**', 'react-native/android/**', 'vendor/**') }}

      - run: npm ci
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
      # Build the Android shared object file (if cache missed)
      - run: ANDROID_NDK=$ANDROID_NDK_HOME node scripts/build-android.js --arch=x86 --build-type=Debug
        if: ${{ steps.cache-android-so.outputs.cache-hit != 'true' }}
      # Bootstrap lerna sub-packages (builds the packages, the Realm JS native module and pod install)
      - run: npx lerna bootstrap --scope '{realm-integration-tests,realm-react-native-tests}' --include-dependencies
      # Run the tests
      - name: Run tests (Android / Native)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: npm run test:android --prefix integration-tests/environments/react-native
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
          MOCHA_REMOTE_EXIT_ON_ERROR: true
      - name: Run tests (Android / Chrome Debugging)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: npm run test:android:chrome --prefix integration-tests/environments/react-native
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
          MOCHA_REMOTE_EXIT_ON_ERROR: true
          HEADLESS_DEBUGGER: true
